package com.example.test.ServiceImpl;import com.example.test.Entity.Comment;import com.example.test.Entity.Post;import com.example.test.Entity.User;import com.example.test.Repositories.CommentRepository;import com.example.test.Repositories.PostRepository;import com.example.test.Repositories.UserRepository;import com.example.test.Request.CommentRequest;import com.example.test.Services.CommentService;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.modelmapper.ModelMapper;import org.springframework.stereotype.Service;import java.time.LocalDateTime;@Service@RequiredArgsConstructor@Slf4jpublic class CommentServiceImplentation  implements CommentService {    private final CommentRepository commentRepository;    private final UserRepository userRepository;    private final PostRepository postRepository;    private final ModelMapper modelMapper;    @Override    public CommentRequest commentPost(CommentRequest commentRequest,Long id,String email) {        User findUser = userRepository.findByEmail(email).orElse(null);        Post post = postRepository.findById(id).orElse(null);        log.info("post {}",post);        log.info("findUser {}",findUser);            Comment comment = Comment.builder()                    .user(findUser)                    .time(LocalDateTime.now())                    .comment(commentRequest.getComment())                    .post(post)                    .build();            return modelMapper.map(commentRepository.save(comment), CommentRequest.class);    }}