package com.example.test.ServiceImpl;import com.example.test.Entity.Likes;import com.example.test.Entity.Post;import com.example.test.Entity.User;import com.example.test.Repositories.LikeRespository;import com.example.test.Repositories.PostRepository;import com.example.test.Repositories.UserRepository;import com.example.test.Request.LikeRequest;import lombok.RequiredArgsConstructor;import org.modelmapper.ModelMapper;import org.springframework.stereotype.Service;import org.webjars.NotFoundException;import java.util.Optional;@Service@RequiredArgsConstructorpublic class LikeServiceImplementation {    private final LikeRespository likeRespository;    private final UserRepository userRepository;    private final PostRepository postRepository;    private final ModelMapper modelMapper;    public LikeRequest likes(Long id, LikeRequest likeRequestDto, String email) {        Post post = postRepository.findById(id).orElse(null);        User check = userRepository.findUsersByEmail(email);        Optional<Likes> checks = likeRespository.findLikesByUserIdAndPost(post.getPostId(),check.getId());        if (!checks.isEmpty()) {            throw new NotFoundException("Post not found");        } else {            if (!likeRequestDto.isLike()) {                throw new IllegalArgumentException("Likes must be set true to confirm that there particular user just like");            }                Likes likes = Likes.builder()                        .user(check)                        .liked(likeRequestDto.isLike())                        .post(post)                        .build();                return modelMapper.map(likeRespository.save(likes), LikeRequest.class);            }        }}