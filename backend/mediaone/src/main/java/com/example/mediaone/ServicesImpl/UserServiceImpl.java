package com.example.mediaone.Services;import com.example.mediaone.DTO.UserDTO;import com.example.mediaone.Entity.User;import com.example.mediaone.Repository.UserRepositoy;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpSession;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Service;@Service@RequiredArgsConstructorpublic class UserServiceImpl {    private final UserRepositoy userRepositoy;    private final HttpServletRequest request;    public User create(UserDTO userDTO){        User find = userRepositoy.findUserByEmail(userDTO.getEmail());        if(find!=null){            throw new RuntimeException("Email Already Exist");        }        User user = User.builder()                .username(userDTO.getUsername())                .email(userDTO.getEmail())                .password(userDTO.getPassword())                .build();        HttpSession session = request.getSession();        session.setAttribute("id",user.getId());        return userRepositoy.save(user);    }    public User signin(UserDTO userDTO){        User user = userRepositoy.findUserByEmailAndPassword(userDTO.getEmail(), userDTO.getPassword());        if(user!=null){                    }    }}